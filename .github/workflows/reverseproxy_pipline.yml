name: Crm_Prod_Piplinessss

on:
  workflow_dispatch:
    inputs:
      pull_branch:
        description: 'Pull the branch from Git'
        required: true
        default: 'false'
        type: boolean
      docker_build:
        description: 'Run Docker build and up'
        required: true
        default: 'false'
        type: boolean
      extra_commands:
        description: 'Extra commands to execute inside the container (e.g. php artisan migrate)'
        required: false
        default: ''
        type: string

jobs:
  ci_cd_pipeline:
    runs-on: ubuntu-latest

    # Global environment variables for the job
    env:
      server_user: ${{ secrets.SERVER_USER }}
      server_ip: ${{ secrets.PROD_SERVER_IP }}  # Updated to PROD_SERVER_IP
      app_root: /var/www/html/crm.marshub.com

    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Set up SSH Key
      - name: Set up SSH access
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY_PROD }}  # Updated to SSH_PRIVATE_KEY_PROD
          SERVER_KNOWN_HOSTS: ${{ secrets.SERVER_KNOWN_HOSTS }}  # if you store known hosts as a secret
        run: |
          # Create the .ssh directory
          mkdir -p ~/.ssh
          # Add the private key to id_rsa
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          # If SERVER_KNOWN_HOSTS is provided, add it to known_hosts
          if [ -n "$SERVER_KNOWN_HOSTS" ]; then
            echo "$SERVER_KNOWN_HOSTS" > ~/.ssh/known_hosts
            chmod 644 ~/.ssh/known_hosts
          fi
          echo "SSH key and known hosts file configured successfully."

      # Pull Branch (if enabled)
      - name: Pull Branch
        if: ${{ github.event.inputs.pull_branch == 'true' }}
        run: |
          echo "Pulling the production branch..."
          ssh ${server_user}@${server_ip} "cd ${app_root} && git pull origin production"

      # Docker Build and Up (if enabled)
      - name: Docker Build
        if: ${{ github.event.inputs.docker_build == 'true' }}
        run: |
          echo "Building Docker containers..."
          ssh ${server_user}@${server_ip} "cd ${app_root} && docker-compose -f ${app_root}/docker-compose.yml up -d --build"
          
          # Create the temp_data directory inside the container
          echo "Creating temp_data directory inside the container..."
          ssh ${server_user}@${server_ip} "docker exec -i crm_marshub_prod mkdir -p /var/temp_data"
          
          # Set permissions for the temp_data directory
          echo "Setting permissions for the temp_data directory..."
          ssh ${server_user}@${server_ip} "docker exec -i crm_marshub_prod chmod 777 /var/temp_data"

      # Execute Extra Commands (if provided)
      - name: Execute Extra Commands
        if: ${{ github.event.inputs.extra_commands != '' }}
        run: |
          echo "Executing extra commands inside the container..."
          ssh ${server_user}@${server_ip} "docker exec -i crm_marshub_prod ${github.event.inputs.extra_commands}"
